{"version":3,"file":"static/js/733.764dbc81.chunk.js","mappings":"2KAEA,MAGMA,E,KAAWC,GAHA,mBAKJC,EAAS,CAClBC,iBAAkBH,EAAW,iBAC7BI,UAAWJ,EACXK,WAAYL,E,qCCOhB,IAbqB,KACjB,MAAMM,GAAWC,EAAAA,EAAAA,SAAO,GASxB,OAPAC,EAAAA,EAAAA,YACI,IAAM,KACFF,EAASG,SAAU,CAAK,GAE5B,IAGGH,CAAQ,C,+CCCnB,QAZA,MACII,eAEI,aADuBC,EAAAA,EAAAA,IAAUT,EAAAA,EAAAA,mBACjBU,IACpB,CAEAF,cAAcG,GAEV,aADuBF,EAAAA,EAAAA,IAAW,GAAET,EAAAA,EAAAA,aAAoBW,MACxCD,IACpB,E,4PC6BJ,UAtCA,MACIE,cAAe,CAGfJ,uBAAuBG,EAAIE,EAAWC,GAClC,IACI,MAAMC,QAAeN,EAAAA,EAAAA,MACjBT,EAAAA,EAAAA,WAAoBW,EACpB,CAAEK,MAAO,KACT,CACIC,QAAS,CACLC,cAAgB,6PAI5BC,QAAQC,IAAIL,EAGhB,CAFE,MAAOM,GACLF,QAAQC,IAAIC,EAChB,CACJ,CAGAb,eAAeG,EAAID,EAAMI,GACrB,aAAaL,EAAAA,EAAAA,MAAYT,EAAAA,EAAAA,WAAoBW,EAAID,EAAM,CACnDO,QAAS,CACLC,cAAgB,UAASJ,MAGrC,CAGAN,eACI,IACI,OAAOC,EAAAA,EAAAA,OACE,CAAX,MAAOY,GAAI,CACjB,G,SCsGJ,MAzHa,IAAoB,OAAdC,GAAQ,EACvB,MAAMR,GAAQS,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,KAAKC,KAAKZ,QAC/Ca,EAAUL,EAAOZ,KACjBkB,GAAQC,EAAAA,EAAAA,KACRC,GAAcC,EAAAA,EAAAA,MACER,EAAAA,EAAAA,KAAaC,GAAUA,EAAMQ,gBAEnD,OAAKL,GAED,iCACI,wBAAI,wBACJ,SAAC,KAAM,CACHM,cAAe,CACXC,KAAMP,EAAQO,KACdC,KAAMR,EAAQQ,KACdC,MAAOT,EAAQS,MACfC,YAAa,qBACbC,OAAQ,MAEZC,iBAAkBC,EAAAA,KAAaC,MAAM,CACjCP,KAAMM,EAAAA,KAAaE,SAAS,yCAEhCC,SAAUnC,MAAOoC,EAAO,KAA8C,IAA7C,UAAEC,EAAS,UAAEC,EAAS,cAAEC,GAAe,EAC5D,IACI,MAAM,OAAET,KAAW5B,GAASkC,EACtBI,QAAgBC,EAAAA,gBAAwBtB,EAAQhB,GAAID,EAAMI,GAChEK,QAAQC,IAAI4B,GACRlB,EAAYvB,UACZuC,EAAU,CAAEI,SAAS,IACrBH,GAAc,GAQtB,CANE,MAAOI,GACDrB,EAAYvB,UACZuC,EAAU,CAAEI,SAAS,IACrBL,EAAU,CAAEP,OAAQa,EAAIC,UACxBL,GAAc,GAEtB,GACF,SAED,QAAC,OAAEM,EAAM,WAAEC,EAAU,aAAEC,EAAY,aAAEC,EAAY,aAAEC,EAAY,QAAEC,EAAO,OAAEd,GAAQ,SAC/E,kBAAMe,YAAU,EAAChB,SAAUa,KAAkBlC,EAAM,WAE/C,UAACsC,EAAA,EAAW,CAACC,WAAS,EAACC,MAAOC,QAAQL,EAAQxB,MAAQmB,EAAOnB,MAAO8B,GAAI,IAAKpC,EAAMqC,WAAWC,aAAc,WACxG,SAACC,EAAA,EAAU,CAACC,QAAQ,kCAAiC,SAAC,qBACtD,SAACC,EAAA,EAAa,CACV1D,GAAG,kCACH2D,KAAK,OACLC,MAAO3B,EAAOV,KACdA,KAAK,OACLsC,OAAQlB,EACRmB,SAAUlB,EACVmB,WAAY,CAAC,IAEhBhB,EAAQxB,MAAQmB,EAAOnB,OACpB,SAACyC,EAAA,EAAc,CAACb,OAAK,EAACnD,GAAG,wCAAuC,SAC3D0C,EAAOnB,WAMpB,UAAC0B,EAAA,EAAW,CAACC,WAAS,EAACC,MAAOC,QAAQL,EAAQvB,MAAQkB,EAAOlB,MAAO6B,GAAI,IAAKpC,EAAMqC,WAAWC,aAAc,WACxG,SAACC,EAAA,EAAU,CAACC,QAAQ,kCAAiC,SAAC,4BACtD,SAACC,EAAA,EAAa,CACV1D,GAAG,kCACH2D,KAAK,OACLC,MAAO3B,EAAOT,KACdD,KAAK,OACLsC,OAAQlB,EACRmB,SAAUlB,EACVmB,WAAY,CAAC,IAEhBhB,EAAQvB,MAAQkB,EAAOlB,OACpB,SAACwC,EAAA,EAAc,CAACb,OAAK,EAACnD,GAAG,wCAAuC,SAC3D0C,EAAOnB,WAMpB,UAAC0B,EAAA,EAAW,CAACC,WAAS,EAACC,MAAOC,QAAQL,EAAQtB,OAASiB,EAAOjB,OAAQ4B,GAAI,IAAKpC,EAAMqC,WAAWC,aAAc,WAC1G,SAACC,EAAA,EAAU,CAACC,QAAQ,mCAAkC,SAAC,wBACvD,SAACC,EAAA,EAAa,CACV1D,GAAG,mCACH2D,KAAK,SACLC,MAAO3B,EAAOR,MACdF,KAAK,QACLsC,OAAQlB,EACRmB,SAAUlB,EACVmB,WAAY,CAAC,IAEhBhB,EAAQvB,MAAQkB,EAAOlB,OACpB,SAACwC,EAAA,EAAc,CAACb,OAAK,EAACnD,GAAG,wCAAuC,SAC3D0C,EAAOnB,WAKpB,SAAC0C,EAAA,EAAG,CAACZ,GAAI,CAAEa,GAAI,GAAI,UACf,SAACC,EAAA,EAAa,WACV,SAACC,EAAA,EAAM,CACHC,kBAAgB,EAChBC,SAAUxB,EACVI,WAAS,EACT1B,KAAK,QACLmC,KAAK,SACLY,QAAQ,YACRC,MAAM,YAAW,SACpB,2BAKN,QA3GF,uBAAG,gBA8GjB,EChHX,MAfmB,KACf,MAAOxD,EAASyD,IAAcC,EAAAA,EAAAA,eAASC,GACjC3E,GAAK4E,EAAAA,EAAAA,MAAY5E,GAMvB,OAJAL,EAAAA,EAAAA,YAAU,KACNkF,EAAAA,EAAAA,QAAmB7E,GAAI8E,KAAKL,EAAW,GACxC,KAGC,SAACM,EAAA,EAAQ,CAACC,MAAM,mBAAkB,UAC9B,SAAC,EAAI,CAACjF,KAAMiB,KACL,C","sources":["axios/product.js","hooks/useScriptRef.js","repositories/product.js","services/Product.js","components/forms/SingleProduct.jsx","views/single-product-page/index.js"],"sourcesContent":["import { API_URL } from '../config/backend';\r\n\r\nconst endpoint = '/api/v1/product/';\r\n\r\n// End point base\r\nconst BASE_URL = API_URL + endpoint;\r\n\r\nexport const config = {\r\n    GET_ALL_PRODUCTS: BASE_URL + '?publish=false',\r\n    GET_BY_ID: BASE_URL,\r\n    EDIT_BY_ID: BASE_URL\r\n};\r\n","import { useEffect, useRef } from 'react';\r\n\r\n// ==============================|| ELEMENT REFERENCE HOOKS  ||============================== //\r\n\r\nconst useScriptRef = () => {\r\n    const scripted = useRef(true);\r\n\r\n    useEffect(\r\n        () => () => {\r\n            scripted.current = false;\r\n        },\r\n        []\r\n    );\r\n\r\n    return scripted;\r\n};\r\n\r\nexport default useScriptRef;\r\n","import axios from 'axios';\r\nimport { config } from '../axios/product';\r\n\r\nclass Repository {\r\n    async getAll() {\r\n        const response = await axios.get(config.GET_ALL_PRODUCTS);\r\n        return response.data;\r\n    }\r\n\r\n    async getById(id) {\r\n        const response = await axios.get(`${config.GET_BY_ID}/${id}`);\r\n        return response.data;\r\n    }\r\n}\r\n\r\nexport default new Repository();\r\n","import axios from 'axios';\r\nimport { config } from '../axios/product';\r\n\r\nclass ProductService {\r\n    constructor() {}\r\n\r\n    // Change product visibility\r\n    async toggleVisibility(id, published, token) {\r\n        try {\r\n            const toggle = await axios.patch(\r\n                config.EDIT_BY_ID + id,\r\n                { price: 520 },\r\n                {\r\n                    headers: {\r\n                        Authorization: `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im5haHVlbHNlYmFzdGlhbmRpYXpAZ21haWwuY29tIiwiaWQiOiIwMjZhOGVlNy1hZTUzLTQ3OTktYmE3NC0zMzA5MzkyYWNhZDMiLCJpYXQiOjE2NzYyODc0MDUsImV4cCI6MTY3NjM3MzgwNX0.UTCCbeuQg0jLoXZEE1qo9oEvNixJikx3z1HfpelH0-8`\r\n                    }\r\n                }\r\n            );\r\n            console.log(toggle);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    // Edit product by id\r\n    async editById(id, data, token) {\r\n        return await axios.patch(config.EDIT_BY_ID + id, data, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        });\r\n    }\r\n\r\n    // Create product\r\n    async create() {\r\n        try {\r\n            return axios.patch();\r\n        } catch (e) {}\r\n    }\r\n}\r\n\r\nexport default new ProductService();\r\n","import { useSelector } from 'react-redux';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box, Button, FormControl, FormHelperText, Grid, InputLabel, OutlinedInput, Typography, useMediaQuery } from '@mui/material';\r\n\r\n// third party\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\n\r\n// project imports\r\nimport useScriptRef from 'hooks/useScriptRef';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\n\r\n// assets\r\nimport service from '../../services/Product';\r\n\r\n// ===========================|| FIREBASE - REGISTER ||=========================== //\r\n\r\nconst Form = ({ ...others }) => {\r\n    const token = useSelector((state) => state.auth.user.token);\r\n    const product = others.data;\r\n    const theme = useTheme();\r\n    const scriptedRef = useScriptRef();\r\n    const customization = useSelector((state) => state.customization);\r\n\r\n    if (!product) return <p>Esperando...</p>;\r\n    return (\r\n        <>\r\n            <h2>Datos del producto</h2>\r\n            <Formik\r\n                initialValues={{\r\n                    name: product.name,\r\n                    size: product.size,\r\n                    stock: product.stock,\r\n                    description: 'esto es una prueba',\r\n                    submit: null\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    name: Yup.string().required('Debes ingresar un nombre de usuario')\r\n                })}\r\n                onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n                    try {\r\n                        const { submit, ...data } = values;\r\n                        const request = await service.editProductById(product.id, data, token);\r\n                        console.log(request);\r\n                        if (scriptedRef.current) {\r\n                            setStatus({ success: true });\r\n                            setSubmitting(false);\r\n                        }\r\n                    } catch (err) {\r\n                        if (scriptedRef.current) {\r\n                            setStatus({ success: false });\r\n                            setErrors({ submit: err.message });\r\n                            setSubmitting(false);\r\n                        }\r\n                    }\r\n                }}\r\n            >\r\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                    <form noValidate onSubmit={handleSubmit} {...others}>\r\n                        {/* Product name */}\r\n                        <FormControl fullWidth error={Boolean(touched.name && errors.name)} sx={{ ...theme.typography.customInput }}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-product-name\">Nombre completo</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-product-name\"\r\n                                type=\"text\"\r\n                                value={values.name}\r\n                                name=\"name\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.name && errors.name && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\r\n                                    {errors.name}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        {/* Product size */}\r\n                        <FormControl fullWidth error={Boolean(touched.size && errors.size)} sx={{ ...theme.typography.customInput }}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-product-size\">Tamaño del producto</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-product-size\"\r\n                                type=\"text\"\r\n                                value={values.size}\r\n                                name=\"size\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.size && errors.size && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\r\n                                    {errors.name}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        {/* Product stock */}\r\n                        <FormControl fullWidth error={Boolean(touched.stock && errors.stock)} sx={{ ...theme.typography.customInput }}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-product-stock\">Stock del producto</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-product-stock\"\r\n                                type=\"number\"\r\n                                value={values.stock}\r\n                                name=\"stock\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.size && errors.size && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\r\n                                    {errors.name}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        <Box sx={{ mt: 2 }}>\r\n                            <AnimateButton>\r\n                                <Button\r\n                                    disableElevation\r\n                                    disabled={isSubmitting}\r\n                                    fullWidth\r\n                                    size=\"large\"\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                >\r\n                                    Actualizar datos\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Box>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Form;\r\n","// material-ui\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// project imports\r\nimport repository from '../../repositories/product';\r\nimport Form from 'components/forms/SingleProduct';\r\n\r\nconst SamplePage = () => {\r\n    const [product, setProduct] = useState(undefined);\r\n    const id = useParams().id;\r\n\r\n    useEffect(() => {\r\n        repository.getById(id).then(setProduct);\r\n    }, []);\r\n\r\n    return (\r\n        <MainCard title=\"Actualizar datos\">\r\n            <Form data={product} />\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default SamplePage;\r\n"],"names":["BASE_URL","API_URL","config","GET_ALL_PRODUCTS","GET_BY_ID","EDIT_BY_ID","scripted","useRef","useEffect","current","async","axios","data","id","constructor","published","token","toggle","price","headers","Authorization","console","log","e","others","useSelector","state","auth","user","product","theme","useTheme","scriptedRef","useScriptRef","customization","initialValues","name","size","stock","description","submit","validationSchema","Yup","shape","required","onSubmit","values","setErrors","setStatus","setSubmitting","request","service","success","err","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","FormControl","fullWidth","error","Boolean","sx","typography","customInput","InputLabel","htmlFor","OutlinedInput","type","value","onBlur","onChange","inputProps","FormHelperText","Box","mt","AnimateButton","Button","disableElevation","disabled","variant","color","setProduct","useState","undefined","useParams","repository","then","MainCard","title"],"sourceRoot":""}