{"version":3,"file":"static/js/824.288625fe.chunk.js","mappings":"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","sources":["components/tables/Discount.jsx","config/Notifications.js","hooks/useScriptRef.js","axios/company.js","repositories/company.js","components/forms/SingleCompany.jsx","views/single-company-page/index.js","webpack://berry-material-react-free/./src/styles/table.module.css?d106"],"sourcesContent":["import styles from '../../styles/table.module.css';\r\nimport { Button, TextField } from '@mui/material';\r\nimport { TABLE_CONFIG } from 'config/Notifications';\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst Discount = ({ id, defaultValue }) => {\r\n    const [value, setValue] = useState(defaultValue | '');\r\n\r\n    const handler = () => {\r\n        if (value.length >= 1) toast(`Se agrego ${value} de descuento a esta compania`, TABLE_CONFIG);\r\n    };\r\n\r\n    return (\r\n        <td className={styles.discount}>\r\n            <TextField value={value} onChange={(e) => setValue(e.target.value)} id=\"filled-basic\" label=\"Descuento\" variant=\"filled\" />\r\n            <Button onClick={handler} size=\"small\" variant=\"contained\">\r\n                Aplicar\r\n            </Button>\r\n        </td>\r\n    );\r\n};\r\n\r\nexport default Discount;\r\n","export const DEFAULT_CONFIG = {\r\n    position: 'bottom-left',\r\n    hideProgressBar: true,\r\n    closeButton: false,\r\n    closeOnClick: false,\r\n    style: {\r\n        boxShadow: 'none',\r\n        background: 'black',\r\n        color: 'white',\r\n        fontSize: '0.8rem'\r\n    }\r\n};\r\n\r\nexport const TABLE_CONFIG = {\r\n    position: 'bottom-left',\r\n    hideProgressBar: true,\r\n    closeButton: false,\r\n    closeOnClick: false,\r\n    style: {\r\n        boxShadow: 'none',\r\n        background: '#198754',\r\n        color: 'white',\r\n        fontWeight: '600',\r\n        fontSize: '0.745rem'\r\n    }\r\n};\r\n\r\nexport const ERROR_CONFIG = {\r\n    position: 'bottom-left',\r\n    hideProgressBar: true,\r\n    closeButton: false,\r\n    closeOnClick: false,\r\n    style: {\r\n        boxShadow: 'none',\r\n        background: '#ef3443',\r\n        color: 'white',\r\n        fontSize: '0.8rem'\r\n    }\r\n};\r\n","import { useEffect, useRef } from 'react';\r\n\r\n// ==============================|| ELEMENT REFERENCE HOOKS  ||============================== //\r\n\r\nconst useScriptRef = () => {\r\n    const scripted = useRef(true);\r\n\r\n    useEffect(\r\n        () => () => {\r\n            scripted.current = false;\r\n        },\r\n        []\r\n    );\r\n\r\n    return scripted;\r\n};\r\n\r\nexport default useScriptRef;\r\n","import { API_URL } from '../config/backend';\r\n\r\nconst endpoint = '/api/v1/company/';\r\n\r\n// End point base\r\nconst BASE_URL = API_URL + endpoint;\r\n\r\nconst config = {\r\n    GET_ALL: BASE_URL,\r\n    GET_BY_ID: BASE_URL,\r\n    EDIT_BY_ID: BASE_URL\r\n};\r\n\r\nexport { BASE_URL, config };\r\n","import axios from 'axios';\r\nimport { config, BASE_URL } from '../axios/company';\r\n\r\nclass Repository {\r\n    async getAll() {\r\n        const request = await axios.get(config.GET_ALL);\r\n        return request.data;\r\n    }\r\n\r\n    async getById(id, token) {\r\n        const request = await axios.get(config.GET_BY_ID + id, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        });\r\n        return request.data;\r\n    }\r\n\r\n    async create(data, token) {\r\n        const request = await axios.post(BASE_URL, data, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        });\r\n        return request.data;\r\n    }\r\n\r\n    async editById(id, data, token) {\r\n        const request = await axios.patch(BASE_URL + id, data, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        });\r\n        return request.data;\r\n    }\r\n}\r\n\r\nexport default new Repository();\r\n","import { useSelector } from 'react-redux';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box, Button, FormControl, FormHelperText, InputLabel, OutlinedInput } from '@mui/material';\r\n\r\n// third party\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\n\r\n// project imports\r\nimport useScriptRef from 'hooks/useScriptRef';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport repository from '../../repositories/company';\r\nimport { toast } from 'react-toastify';\r\nimport { ERROR_CONFIG, TABLE_CONFIG } from 'config/Notifications';\r\n\r\n// ===========================|| FIREBASE - REGISTER ||=========================== //\r\n\r\nconst Form = ({ ...others }) => {\r\n    const company = others.data;\r\n    const theme = useTheme();\r\n    const scriptedRef = useScriptRef();\r\n    const customization = useSelector((state) => state.customization);\r\n\r\n    if (!company) return <p>Esperando...</p>;\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                name: company.name,\r\n                type: company.type,\r\n                direction: company.direction,\r\n                phone: company.phone,\r\n                cuit: company.cuit,\r\n                email: company.email,\r\n                physicalAddress: company.physicalAddress,\r\n                shippingAddress: company.shippingAddress,\r\n                purchasingManager: company.purchasingManager,\r\n                user: company.user\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n                name: Yup.string().required('Debes ingresar un nombre')\r\n            })}\r\n            onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n                try {\r\n                    const { user: submit, ...data } = values;\r\n                    const request = await repository.editById(company.id, data, company.token);\r\n\r\n                    if (request) toast('Todo ha salido bien, la compania se creo con exito', TABLE_CONFIG);\r\n\r\n                    if (scriptedRef.current) {\r\n                        setStatus({ success: true });\r\n                        setSubmitting(false);\r\n                    }\r\n                } catch (err) {\r\n                    console.log(err);\r\n                    toast('Ha habido un error con el servidor, intentalo mas tarde', ERROR_CONFIG);\r\n                    if (scriptedRef.current) {\r\n                        setStatus({ success: false });\r\n                        setErrors({ user: err.message });\r\n                        setSubmitting(false);\r\n                    }\r\n                }\r\n            }}\r\n        >\r\n            {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                <form noValidate onSubmit={handleSubmit} {...others}>\r\n                    <h2>Datos basicos</h2>\r\n                    {/* Name */}\r\n                    <FormControl fullWidth error={Boolean(touched.email && errors.email)} sx={{ ...theme.typography.customInput }}>\r\n                        <InputLabel htmlFor=\"outlined-adornment-product-name\">Nombre</InputLabel>\r\n                        <OutlinedInput\r\n                            id=\"outlined-adornment-product-name\"\r\n                            type=\"text\"\r\n                            value={values.name}\r\n                            name=\"name\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            inputProps={{}}\r\n                        />\r\n                        {touched.name && errors.name && (\r\n                            <FormHelperText error id=\"standard-weight-helper-text-product-name\">\r\n                                {errors.name}\r\n                            </FormHelperText>\r\n                        )}\r\n                    </FormControl>\r\n\r\n                    {/* Direccion */}\r\n                    <FormControl fullWidth error={Boolean(touched.direction && errors.direction)} sx={{ ...theme.typography.customInput }}>\r\n                        <InputLabel htmlFor=\"outlined-adornment-product-desc\">Direccion</InputLabel>\r\n                        <OutlinedInput\r\n                            id=\"outlined-adornment-product-desc\"\r\n                            type=\"text\"\r\n                            value={values.direction}\r\n                            name=\"direction\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            inputProps={{}}\r\n                        />\r\n                        {touched.direction && errors.direction && (\r\n                            <FormHelperText error id=\"standard-weight-helper-text-product-desc\">\r\n                                {errors.direction}\r\n                            </FormHelperText>\r\n                        )}\r\n                    </FormControl>\r\n\r\n                    {/* Phone */}\r\n                    <FormControl fullWidth error={Boolean(touched.phone && errors.phone)} sx={{ ...theme.typography.customInput }}>\r\n                        <InputLabel htmlFor=\"outlined-adornment-product-stock\">Telefono</InputLabel>\r\n                        <OutlinedInput\r\n                            id=\"outlined-adornment-product-stock\"\r\n                            type=\"text\"\r\n                            value={values.phone}\r\n                            name=\"phone\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            inputProps={{}}\r\n                        />\r\n                        {touched.phone && errors.phone && (\r\n                            <FormHelperText error id=\"standard-weight-helper-text-product-stock\">\r\n                                {errors.phone}\r\n                            </FormHelperText>\r\n                        )}\r\n                    </FormControl>\r\n\r\n                    <h2>Datos de contacto</h2>\r\n\r\n                    {/* Cuit */}\r\n                    <FormControl fullWidth error={Boolean(touched.cuit && errors.cuit)} sx={{ ...theme.typography.customInput }}>\r\n                        <InputLabel htmlFor=\"outlined-adornment-product-name\">Cuit</InputLabel>\r\n                        <OutlinedInput\r\n                            id=\"outlined-adornment-product-name\"\r\n                            type=\"text\"\r\n                            value={values.cuit}\r\n                            name=\"cuit\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            inputProps={{}}\r\n                        />\r\n                        {touched.cuit && errors.cuit && (\r\n                            <FormHelperText error id=\"standard-weight-helper-text-product-name\">\r\n                                {errors.cuit}\r\n                            </FormHelperText>\r\n                        )}\r\n                    </FormControl>\r\n\r\n                    {/* Email */}\r\n                    <FormControl fullWidth error={Boolean(touched.email && errors.email)} sx={{ ...theme.typography.customInput }}>\r\n                        <InputLabel htmlFor=\"outlined-adornment-product-desc\">Email</InputLabel>\r\n                        <OutlinedInput\r\n                            id=\"outlined-adornment-product-desc\"\r\n                            type=\"text\"\r\n                            value={values.email}\r\n                            name=\"email\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {touched.email && errors.email && (\r\n                            <FormHelperText error id=\"standard-weight-helper-text-product-desc\">\r\n                                {errors.email}\r\n                            </FormHelperText>\r\n                        )}\r\n                    </FormControl>\r\n\r\n                    {/* Direccion fisica*/}\r\n                    <FormControl\r\n                        fullWidth\r\n                        error={Boolean(touched.physicalAddress && errors.physicalAddress)}\r\n                        sx={{ ...theme.typography.customInput }}\r\n                    >\r\n                        <InputLabel htmlFor=\"outlined-adornment-product-stock\">Direccion fisica</InputLabel>\r\n                        <OutlinedInput\r\n                            id=\"outlined-adornment-product-stock\"\r\n                            type=\"text\"\r\n                            value={values.physicalAddress}\r\n                            name=\"physicalAddress\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {touched.physicalAddress && errors.physicalAddress && (\r\n                            <FormHelperText error id=\"standard-weight-helper-text-product-stock\">\r\n                                {errors.physicalAddress}\r\n                            </FormHelperText>\r\n                        )}\r\n                    </FormControl>\r\n\r\n                    {/* Direccion de envios*/}\r\n                    <FormControl\r\n                        fullWidth\r\n                        error={Boolean(touched.shippingAddress && errors.shippingAddress)}\r\n                        sx={{ ...theme.typography.customInput }}\r\n                    >\r\n                        <InputLabel htmlFor=\"outlined-adornment-product-stock\">Direccion de envios</InputLabel>\r\n                        <OutlinedInput\r\n                            id=\"outlined-adornment-product-stock\"\r\n                            type=\"text\"\r\n                            value={values.shippingAddress}\r\n                            name=\"shippingAddress\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {touched.shippingAddress && errors.shippingAddress && (\r\n                            <FormHelperText error id=\"standard-weight-helper-text-product-stock\">\r\n                                {errors.shippingAddress}\r\n                            </FormHelperText>\r\n                        )}\r\n                    </FormControl>\r\n\r\n                    {/* Jefe de compras */}\r\n                    <FormControl\r\n                        fullWidth\r\n                        error={Boolean(touched.purchasingManager && errors.purchasingManager)}\r\n                        sx={{ ...theme.typography.customInput }}\r\n                    >\r\n                        <InputLabel htmlFor=\"outlined-adornment-product-stock\">Jefe de compras</InputLabel>\r\n                        <OutlinedInput\r\n                            id=\"outlined-adornment-product-stock\"\r\n                            type=\"text\"\r\n                            value={values.purchasingManager}\r\n                            name=\"purchasingManager\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                        />\r\n                        {touched.purchasingManager && errors.purchasingManager && (\r\n                            <FormHelperText error id=\"standard-weight-helper-text-product-stock\">\r\n                                {errors.purchasingManager}\r\n                            </FormHelperText>\r\n                        )}\r\n                    </FormControl>\r\n\r\n                    <Box sx={{ mt: 2 }}>\r\n                        <AnimateButton>\r\n                            <Button\r\n                                disableElevation\r\n                                disabled={isSubmitting}\r\n                                fullWidth\r\n                                size=\"large\"\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                            >\r\n                                Crear compania\r\n                            </Button>\r\n                        </AnimateButton>\r\n                    </Box>\r\n                </form>\r\n            )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default Form;\r\n","// material-ui\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { useSelector } from 'react-redux';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// project imports\r\nimport repository from '../../repositories/company';\r\nimport Form from 'components/forms/SingleCompany';\r\nimport Discount from 'components/tables/Discount';\r\n\r\nconst SamplePage = () => {\r\n    const token = useSelector((state) => state.auth.user.token);\r\n    const [company, setCompany] = useState(undefined);\r\n    const id = useParams().id;\r\n\r\n    useEffect(() => {\r\n        repository.getById(id, token).then(setCompany);\r\n    }, []);\r\n\r\n    return (\r\n        <MainCard secondary={company && <Discount defaultValue={company.discount} id={company.id} />} title=\"Actualizar datos\">\r\n            <Form data={company} />\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default SamplePage;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"table_container__mP24f\",\"published\":\"table_published__kFIbO\",\"actionButtons\":\"table_actionButtons__fiSmj\",\"orderButton\":\"table_orderButton__akJZX\",\"link\":\"table_link__026kr\",\"discount\":\"table_discount__NZ0ZN\"};"],"names":["id","defaultValue","value","setValue","useState","className","styles","onChange","e","target","label","variant","onClick","length","toast","TABLE_CONFIG","size","position","hideProgressBar","closeButton","closeOnClick","style","boxShadow","background","color","fontWeight","fontSize","ERROR_CONFIG","scripted","useRef","useEffect","current","BASE_URL","API_URL","config","GET_ALL","GET_BY_ID","EDIT_BY_ID","async","axios","data","token","headers","Authorization","others","company","theme","useTheme","scriptedRef","useScriptRef","useSelector","state","customization","initialValues","name","type","direction","phone","cuit","email","physicalAddress","shippingAddress","purchasingManager","user","validationSchema","Yup","shape","required","onSubmit","values","setErrors","setStatus","setSubmitting","submit","repository","success","err","console","log","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","FormControl","fullWidth","error","Boolean","sx","typography","customInput","InputLabel","htmlFor","OutlinedInput","onBlur","inputProps","FormHelperText","Box","mt","AnimateButton","Button","disableElevation","disabled","auth","setCompany","undefined","useParams","then","MainCard","secondary","Discount","discount","title"],"sourceRoot":""}