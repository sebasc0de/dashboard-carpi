{"version":3,"file":"static/js/792.cb10b1d7.chunk.js","mappings":"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","sources":["utils/password-strength.js","views/pages/authentication/auth-forms/AuthRegister.js","views/pages/authentication/authentication3/Register3.js"],"sourcesContent":["/**\r\n * Password validator for login pages\r\n */\r\nimport value from 'assets/scss/_themes-vars.module.scss';\r\n\r\n// has number\r\nconst hasNumber = (number) => new RegExp(/[0-9]/).test(number);\r\n\r\n// has mix of small and capitals\r\nconst hasMixed = (number) => new RegExp(/[a-z]/).test(number) && new RegExp(/[A-Z]/).test(number);\r\n\r\n// has special chars\r\nconst hasSpecial = (number) => new RegExp(/[!#@$%^&*)(+=._-]/).test(number);\r\n\r\n// set color based on password strength\r\nexport const strengthColor = (count) => {\r\n    if (count < 2) return { label: 'Poor', color: value.errorMain };\r\n    if (count < 3) return { label: 'Weak', color: value.warningDark };\r\n    if (count < 4) return { label: 'Normal', color: value.orangeMain };\r\n    if (count < 5) return { label: 'Good', color: value.successMain };\r\n    if (count < 6) return { label: 'Strong', color: value.successDark };\r\n    return { label: 'Poor', color: value.errorMain };\r\n};\r\n\r\n// password strength indicator\r\nexport const strengthIndicator = (number) => {\r\n    let strengths = 0;\r\n    if (number.length > 5) strengths += 1;\r\n    if (number.length > 7) strengths += 1;\r\n    if (hasNumber(number)) strengths += 1;\r\n    if (hasSpecial(number)) strengths += 1;\r\n    if (hasMixed(number)) strengths += 1;\r\n    return strengths;\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Checkbox,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormHelperText,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    TextField,\r\n    Typography,\r\n    useMediaQuery\r\n} from '@mui/material';\r\n\r\n// third party\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\n\r\n// project imports\r\nimport useScriptRef from 'hooks/useScriptRef';\r\nimport Google from 'assets/images/icons/social-google.svg';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport { strengthColor, strengthIndicator } from 'utils/password-strength';\r\n\r\n// assets\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport Auth from 'services/Auth';\r\n\r\n// ===========================|| FIREBASE - REGISTER ||=========================== //\r\n\r\nconst FirebaseRegister = ({ ...others }) => {\r\n    const theme = useTheme();\r\n    const scriptedRef = useScriptRef();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n    const customization = useSelector((state) => state.customization);\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [checked, setChecked] = useState(true);\r\n\r\n    const [strength, setStrength] = useState(0);\r\n    const [level, setLevel] = useState();\r\n\r\n    const googleHandler = async () => {\r\n        console.log('this is test');\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const changePassword = (value) => {\r\n        const temp = strengthIndicator(value);\r\n        setStrength(temp);\r\n        setLevel(strengthColor(temp));\r\n    };\r\n\r\n    useEffect(() => {\r\n        changePassword('123456');\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <AnimateButton>\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            onClick={googleHandler}\r\n                            size=\"large\"\r\n                            sx={{\r\n                                color: 'grey.700',\r\n                                backgroundColor: theme.palette.grey[50],\r\n                                borderColor: theme.palette.grey[100]\r\n                            }}\r\n                        >\r\n                            <Box sx={{ mr: { xs: 1, sm: 2, width: 20 } }}>\r\n                                <img src={Google} alt=\"google\" width={16} height={16} style={{ marginRight: matchDownSM ? 8 : 16 }} />\r\n                            </Box>\r\n                            Sign up with Google\r\n                        </Button>\r\n                    </AnimateButton>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Formik\r\n                initialValues={{\r\n                    fullName: '',\r\n                    email: '',\r\n                    password: '',\r\n                    passwordConfirmation: '',\r\n                    submit: null\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    fullName: Yup.string().required('Debes ingresar un nombre de usuario'),\r\n                    email: Yup.string().email('Debe ser un email valido').max(255).required('El email es requerido'),\r\n                    password: Yup.string().max(255).required('Ingresa una contraseña'),\r\n                    passwordConfirmation: Yup.string().oneOf([Yup.ref('password'), null], 'Las contraseñas no coinciden')\r\n                })}\r\n                onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n                    try {\r\n                        const { submit, ...data } = values;\r\n                        const register = await Auth.registerWithEmailAndPassword(data);\r\n                        if (scriptedRef.current) {\r\n                            setStatus({ success: true });\r\n                            setSubmitting(false);\r\n                        }\r\n                    } catch (err) {\r\n                        if (scriptedRef.current) {\r\n                            setStatus({ success: false });\r\n                            setErrors({ submit: err.message });\r\n                            setSubmitting(false);\r\n                        }\r\n                    }\r\n                }}\r\n            >\r\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                    <form noValidate onSubmit={handleSubmit} {...others}>\r\n                        <FormControl fullWidth error={Boolean(touched.email && errors.email)} sx={{ ...theme.typography.customInput }}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-email-register\">Nombre completo</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-email-register\"\r\n                                type=\"email\"\r\n                                value={values.fullName}\r\n                                name=\"fullName\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.fullName && errors.fullName && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\r\n                                    {errors.fullName}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n                        <FormControl fullWidth error={Boolean(touched.email && errors.email)} sx={{ ...theme.typography.customInput }}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-email-register\">Correo electronico</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-email-register\"\r\n                                type=\"email\"\r\n                                value={values.email}\r\n                                name=\"email\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.email && errors.email && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\r\n                                    {errors.email}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        <FormControl\r\n                            fullWidth\r\n                            error={Boolean(touched.password && errors.password)}\r\n                            sx={{ ...theme.typography.customInput }}\r\n                        >\r\n                            <InputLabel htmlFor=\"outlined-adornment-password-register\">Contraseña</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-password-register\"\r\n                                type={showPassword ? 'text' : 'password'}\r\n                                value={values.password}\r\n                                name=\"password\"\r\n                                label=\"Contraseña\"\r\n                                onBlur={handleBlur}\r\n                                onChange={(e) => {\r\n                                    handleChange(e);\r\n                                    changePassword(e.target.value);\r\n                                }}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                            size=\"large\"\r\n                                        >\r\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.password && errors.password && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-password-register\">\r\n                                    {errors.password}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        <FormControl\r\n                            fullWidth\r\n                            error={Boolean(touched.passwordConfirmation && errors.passwordConfirmation)}\r\n                            sx={{ ...theme.typography.customInput }}\r\n                        >\r\n                            <InputLabel htmlFor=\"outlined-adornment-password-register\">Confirmar contraseña</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-password-register\"\r\n                                type={showPassword ? 'text' : 'password'}\r\n                                value={values.passwordConfirmation}\r\n                                name=\"passwordConfirmation\"\r\n                                label=\"Confirmar contraseña\"\r\n                                onBlur={handleBlur}\r\n                                onChange={(e) => {\r\n                                    handleChange(e);\r\n                                    changePassword(e.target.value);\r\n                                }}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                            size=\"large\"\r\n                                        >\r\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.passwordConfirmation && errors.passwordConfirmation && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-password-register\">\r\n                                    {errors.passwordConfirmation}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        {strength !== 0 && (\r\n                            <FormControl fullWidth>\r\n                                <Box sx={{ mb: 2 }}>\r\n                                    <Grid container spacing={2} alignItems=\"center\">\r\n                                        <Grid item>\r\n                                            <Box\r\n                                                style={{ backgroundColor: level?.color }}\r\n                                                sx={{ width: 85, height: 8, borderRadius: '7px' }}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Typography variant=\"subtitle1\" fontSize=\"0.75rem\">\r\n                                                {level?.label}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Box>\r\n                            </FormControl>\r\n                        )}\r\n\r\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                            <Grid item>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            checked={checked}\r\n                                            onChange={(event) => setChecked(event.target.checked)}\r\n                                            name=\"checked\"\r\n                                            color=\"primary\"\r\n                                        />\r\n                                    }\r\n                                    label={\r\n                                        <Typography variant=\"subtitle1\">\r\n                                            Agree with &nbsp;\r\n                                            <Typography variant=\"subtitle1\" component={Link} to=\"#\">\r\n                                                Terms & Condition.\r\n                                            </Typography>\r\n                                        </Typography>\r\n                                    }\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Box sx={{ mt: 2 }}>\r\n                            <AnimateButton>\r\n                                <Button\r\n                                    disableElevation\r\n                                    disabled={isSubmitting}\r\n                                    fullWidth\r\n                                    size=\"large\"\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                >\r\n                                    Crear cuenta\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Box>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FirebaseRegister;\r\n","import { Link } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@mui/material';\r\n\r\n// project imports\r\nimport AuthWrapper1 from '../AuthWrapper1';\r\nimport AuthCardWrapper from '../AuthCardWrapper';\r\nimport Logo from 'ui-component/Logo';\r\nimport AuthRegister from '../auth-forms/AuthRegister';\r\nimport AuthFooter from 'ui-component/cards/AuthFooter';\r\n\r\n// assets\r\n\r\n// ===============================|| AUTH3 - REGISTER ||=============================== //\r\n\r\nconst Register = () => {\r\n    const theme = useTheme();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n    return (\r\n        <AuthWrapper1>\r\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\r\n                <Grid item xs={12}>\r\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\r\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\r\n                            <AuthCardWrapper>\r\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\r\n                                    <Grid item sx={{ mb: 3 }}>\r\n                                        <Link to=\"#\">\r\n                                            <Logo />\r\n                                        </Link>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid\r\n                                            container\r\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\r\n                                            alignItems=\"center\"\r\n                                            justifyContent=\"center\"\r\n                                        >\r\n                                            <Grid item>\r\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\r\n                                                    <Typography\r\n                                                        color={theme.palette.secondary.main}\r\n                                                        gutterBottom\r\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\r\n                                                    >\r\n                                                        Sign up\r\n                                                    </Typography>\r\n                                                    <Typography\r\n                                                        variant=\"caption\"\r\n                                                        fontSize=\"16px\"\r\n                                                        textAlign={matchDownSM ? 'center' : 'inherit'}\r\n                                                    >\r\n                                                        Enter your credentials to continue\r\n                                                    </Typography>\r\n                                                </Stack>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <AuthRegister />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Divider />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\r\n                                            <Typography\r\n                                                component={Link}\r\n                                                to=\"/iniciar-sesion\"\r\n                                                variant=\"subtitle1\"\r\n                                                sx={{ textDecoration: 'none' }}\r\n                                            >\r\n                                                Already have an account?\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </AuthCardWrapper>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\r\n                    <AuthFooter />\r\n                </Grid>\r\n            </Grid>\r\n        </AuthWrapper1>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n"],"names":["strengthColor","count","label","color","value","strengthIndicator","number","strengths","length","RegExp","test","hasNumber","hasSpecial","hasMixed","others","theme","useTheme","scriptedRef","useScriptRef","matchDownSM","useMediaQuery","breakpoints","down","showPassword","setShowPassword","useSelector","state","customization","useState","checked","setChecked","strength","setStrength","level","setLevel","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","changePassword","temp","useEffect","Grid","container","direction","justifyContent","spacing","item","xs","AnimateButton","Button","variant","fullWidth","onClick","async","console","log","size","sx","backgroundColor","palette","grey","borderColor","Box","mr","sm","width","src","Google","alt","height","style","marginRight","initialValues","fullName","email","password","passwordConfirmation","submit","validationSchema","Yup","shape","required","max","oneOf","onSubmit","values","setErrors","setStatus","setSubmitting","data","Auth","current","success","err","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","FormControl","error","Boolean","typography","customInput","InputLabel","htmlFor","OutlinedInput","id","type","name","onBlur","onChange","inputProps","FormHelperText","e","target","endAdornment","InputAdornment","position","IconButton","onMouseDown","edge","Visibility","VisibilityOff","mb","alignItems","borderRadius","Typography","fontSize","FormControlLabel","control","Checkbox","component","Link","to","mt","disableElevation","disabled","AuthWrapper1","minHeight","m","AuthCardWrapper","Logo","Stack","secondary","main","gutterBottom","textAlign","AuthRegister","Divider","textDecoration","AuthFooter"],"sourceRoot":""}