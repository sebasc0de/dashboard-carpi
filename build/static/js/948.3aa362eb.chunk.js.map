{"version":3,"file":"static/js/948.3aa362eb.chunk.js","mappings":"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","sources":["axios/product.js","config/Notifications.js","hooks/useScriptRef.js","repositories/product.js","services/Product.js","components/tables/VisibilitySwitch.jsx","components/forms/SingleProduct.jsx","views/single-product-page/index.js"],"sourcesContent":["import { API_URL } from '../config/backend';\r\n\r\nconst endpoint = '/api/v1/product/';\r\n\r\n// End point base\r\nconst BASE_URL = API_URL + endpoint;\r\n\r\nexport const config = {\r\n    GET_ALL_PRODUCTS: BASE_URL + '?publish=false',\r\n    GET_BY_ID: BASE_URL,\r\n    EDIT_BY_ID: BASE_URL\r\n};\r\n","export const DEFAULT_CONFIG = {\r\n    position: 'bottom-left',\r\n    hideProgressBar: true,\r\n    closeButton: false,\r\n    closeOnClick: false,\r\n    style: {\r\n        boxShadow: 'none',\r\n        background: 'black',\r\n        color: 'white',\r\n        fontSize: '0.8rem'\r\n    }\r\n};\r\n\r\nexport const TABLE_CONFIG = {\r\n    position: 'bottom-left',\r\n    hideProgressBar: true,\r\n    closeButton: false,\r\n    closeOnClick: false,\r\n    style: {\r\n        boxShadow: 'none',\r\n        background: '#198754',\r\n        color: 'white',\r\n        fontWeight: '600',\r\n        fontSize: '0.745rem'\r\n    }\r\n};\r\n\r\nexport const ERROR_CONFIG = {\r\n    position: 'bottom-left',\r\n    hideProgressBar: true,\r\n    closeButton: false,\r\n    closeOnClick: false,\r\n    style: {\r\n        boxShadow: 'none',\r\n        background: '#ef3443',\r\n        color: 'white',\r\n        fontSize: '0.8rem'\r\n    }\r\n};\r\n","import { useEffect, useRef } from 'react';\r\n\r\n// ==============================|| ELEMENT REFERENCE HOOKS  ||============================== //\r\n\r\nconst useScriptRef = () => {\r\n    const scripted = useRef(true);\r\n\r\n    useEffect(\r\n        () => () => {\r\n            scripted.current = false;\r\n        },\r\n        []\r\n    );\r\n\r\n    return scripted;\r\n};\r\n\r\nexport default useScriptRef;\r\n","import axios from 'axios';\r\nimport { config } from '../axios/product';\r\n\r\nclass Repository {\r\n    async getAll() {\r\n        const response = await axios.get(config.GET_ALL_PRODUCTS);\r\n        return response.data;\r\n    }\r\n\r\n    async getById(id) {\r\n        const response = await axios.get(`${config.GET_BY_ID}/${id}`);\r\n        return response.data;\r\n    }\r\n}\r\n\r\nexport default new Repository();\r\n","import axios from 'axios';\r\nimport { config } from '../axios/product';\r\n\r\nclass ProductService {\r\n    constructor() {}\r\n\r\n    // Change product visibility\r\n    async toggleVisibility(id, published, token) {\r\n        try {\r\n            const toggle = await axios.patch(\r\n                config.EDIT_BY_ID + id,\r\n                { published },\r\n                {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`\r\n                    }\r\n                }\r\n            );\r\n            console.log(toggle);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    // Edit product by id\r\n    async editById(id, data, token) {\r\n        return await axios.patch(config.EDIT_BY_ID + id, data, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        });\r\n    }\r\n\r\n    // Create product\r\n    async create() {\r\n        try {\r\n            return axios.patch();\r\n        } catch (e) {}\r\n    }\r\n}\r\n\r\nexport default new ProductService();\r\n","import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Switch from '@mui/material/Switch';\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\nimport { useState } from 'react';\r\nimport service from '../../services/Product';\r\nimport { toast } from 'react-toastify';\r\nimport { TABLE_CONFIG } from 'config/Notifications';\r\n\r\nconst AntSwitch = styled(Switch)(({ theme }) => ({\r\n    width: 28,\r\n    height: 16,\r\n    padding: 0,\r\n    display: 'flex',\r\n    '&:active': {\r\n        '& .MuiSwitch-thumb': {\r\n            width: 15\r\n        },\r\n        '& .MuiSwitch-switchBase.Mui-checked': {\r\n            transform: 'translateX(9px)'\r\n        }\r\n    },\r\n    '& .MuiSwitch-switchBase': {\r\n        padding: 2,\r\n        '&.Mui-checked': {\r\n            transform: 'translateX(12px)',\r\n            color: '#fff',\r\n            '& + .MuiSwitch-track': {\r\n                opacity: 1,\r\n                backgroundColor: theme.palette.mode === 'dark' ? '#177ddc' : '#1890ff'\r\n            }\r\n        }\r\n    },\r\n    '& .MuiSwitch-thumb': {\r\n        boxShadow: '0 2px 4px 0 rgb(0 35 11 / 20%)',\r\n        width: 12,\r\n        height: 12,\r\n        borderRadius: 6,\r\n        transition: theme.transitions.create(['width'], {\r\n            duration: 200\r\n        })\r\n    },\r\n    '& .MuiSwitch-track': {\r\n        borderRadius: 16 / 2,\r\n        opacity: 1,\r\n        backgroundColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,.35)' : 'rgba(0,0,0,.25)',\r\n        boxSizing: 'border-box'\r\n    }\r\n}));\r\n\r\nexport default function CustomizedSwitches({ id, token }) {\r\n    const [visibility, setVisibility] = useState(false);\r\n\r\n    const handler = async () => {\r\n        setVisibility(!visibility);\r\n\r\n        try {\r\n            const change = await service.toggleVisibility(id, visibility, token);\r\n            change && toast('La accion se realizo con exito', TABLE_CONFIG);\r\n        } catch (e) {\r\n            alert('mal');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Stack onChange={handler} direction=\"row\" spacing={1} alignItems=\"center\">\r\n            <Typography>Escondido</Typography>\r\n            <AntSwitch defaultChecked inputProps={{ 'aria-label': 'ant design' }} />\r\n            <Typography>Visible en tienda</Typography>\r\n        </Stack>\r\n    );\r\n}\r\n","import { useSelector } from 'react-redux';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box, Button, FormControl, FormHelperText, Grid, InputLabel, OutlinedInput, Typography, useMediaQuery } from '@mui/material';\r\n\r\n// third party\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\n\r\n// project imports\r\nimport useScriptRef from 'hooks/useScriptRef';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\n\r\n// assets\r\nimport service from '../../services/Product';\r\n\r\n// ===========================|| FIREBASE - REGISTER ||=========================== //\r\n\r\nconst Form = ({ ...others }) => {\r\n    const token = useSelector((state) => state.auth.user.token);\r\n    const product = others.data;\r\n    const theme = useTheme();\r\n    const scriptedRef = useScriptRef();\r\n    const customization = useSelector((state) => state.customization);\r\n\r\n    if (!product) return <p>Esperando...</p>;\r\n    return (\r\n        <>\r\n            <h2>Datos del producto</h2>\r\n            <Formik\r\n                initialValues={{\r\n                    name: product.name,\r\n                    code: product.code,\r\n                    description: product.desc,\r\n                    carpiId: product.carpiId,\r\n                    size: product.size,\r\n                    weight: product.weight,\r\n                    color: product.color,\r\n                    stock: product.stock,\r\n                    max: product.max,\r\n                    min: product.min,\r\n                    productInPromotion: product.productInPromotion,\r\n                    submit: null\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    name: Yup.string().required('Debes ingresar un nombre de usuario')\r\n                })}\r\n                onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n                    try {\r\n                        const { submit, ...data } = values;\r\n                        const request = await service.editProductById(product.id, data, token);\r\n                        console.log(request);\r\n                        if (scriptedRef.current) {\r\n                            setStatus({ success: true });\r\n                            setSubmitting(false);\r\n                        }\r\n                    } catch (err) {\r\n                        if (scriptedRef.current) {\r\n                            setStatus({ success: false });\r\n                            setErrors({ submit: err.message });\r\n                            setSubmitting(false);\r\n                        }\r\n                    }\r\n                }}\r\n            >\r\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                    <form noValidate onSubmit={handleSubmit} {...others}>\r\n                        {/* Product name */}\r\n                        <FormControl fullWidth error={Boolean(touched.name && errors.name)} sx={{ ...theme.typography.customInput }}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-product-name\">Nombre completo</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-product-name\"\r\n                                type=\"text\"\r\n                                value={values.name}\r\n                                name=\"name\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.name && errors.name && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\r\n                                    {errors.name}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        {/* Product code */}\r\n                        <FormControl fullWidth error={Boolean(touched.code && errors.code)} sx={{ ...theme.typography.customInput }}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-product-name\">Codigo del producto</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-product-name\"\r\n                                type=\"text\"\r\n                                value={values.code}\r\n                                name=\"code\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.code && errors.code && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\r\n                                    {errors.code}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        {/* Product Description */}\r\n                        <FormControl\r\n                            fullWidth\r\n                            error={Boolean(touched.description && errors.description)}\r\n                            sx={{ ...theme.typography.customInput }}\r\n                        >\r\n                            <InputLabel htmlFor=\"outlined-adornment-product-size\">Descripcion del producto</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-product-size\"\r\n                                type=\"text\"\r\n                                value={values.description}\r\n                                name=\"description\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.description && errors.description && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\r\n                                    {errors.description}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        {/* Carpi id */}\r\n                        <FormControl fullWidth error={Boolean(touched.carpiId && errors.carpiId)} sx={{ ...theme.typography.customInput }}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-product-size\">Carpi id</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-product-size\"\r\n                                type=\"text\"\r\n                                value={values.carpiId}\r\n                                name=\"carpiId\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.carpiId && errors.carpiId && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\r\n                                    {errors.carpiId}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        {/* Product size */}\r\n                        <FormControl fullWidth error={Boolean(touched.size && errors.size)} sx={{ ...theme.typography.customInput }}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-product-size\">Tamaño del producto</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-product-size\"\r\n                                type=\"text\"\r\n                                value={values.size}\r\n                                name=\"size\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.size && errors.size && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\r\n                                    {errors.name}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        {/* Product weight */}\r\n                        <FormControl fullWidth error={Boolean(touched.weight && errors.weight)} sx={{ ...theme.typography.customInput }}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-product-size\">Peso del producto</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-product-size\"\r\n                                type=\"text\"\r\n                                value={values.weight}\r\n                                name=\"weight\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.weight && errors.weight && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\r\n                                    {errors.weight}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        {/* Product color */}\r\n                        <FormControl fullWidth error={Boolean(touched.color && errors.color)} sx={{ ...theme.typography.customInput }}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-product-stock\">Color del producto</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-product-stock\"\r\n                                type=\"number\"\r\n                                value={values.color}\r\n                                name=\"color\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.color && errors.color && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\r\n                                    {errors.color}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        {/* Product stock */}\r\n                        <FormControl fullWidth error={Boolean(touched.stock && errors.stock)} sx={{ ...theme.typography.customInput }}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-product-stock\">Stock del producto</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-product-stock\"\r\n                                type=\"number\"\r\n                                value={values.stock}\r\n                                name=\"stock\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.size && errors.size && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\r\n                                    {errors.name}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        {/* Product Max */}\r\n                        <FormControl fullWidth error={Boolean(touched.max && errors.max)} sx={{ ...theme.typography.customInput }}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-product-stock\">Max</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-product-stock\"\r\n                                type=\"number\"\r\n                                value={values.max}\r\n                                name=\"max\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.max && errors.max && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\r\n                                    {errors.max}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        {/* Product Min */}\r\n                        <FormControl fullWidth error={Boolean(touched.max && errors.max)} sx={{ ...theme.typography.customInput }}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-product-stock\">Min</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-product-stock\"\r\n                                type=\"number\"\r\n                                value={values.min}\r\n                                name=\"min\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.min && errors.min && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\r\n                                    {errors.min}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        {/* Product in promotion */}\r\n                        <FormControl\r\n                            fullWidth\r\n                            error={Boolean(touched.productInPromotion && errors.productInPromotion)}\r\n                            sx={{ ...theme.typography.customInput }}\r\n                        >\r\n                            <InputLabel htmlFor=\"outlined-adornment-product-stock\">En promocion</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-product-stock\"\r\n                                type=\"boolean\"\r\n                                value={values.productInPromotion}\r\n                                name=\"productInPromotion\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.productInPromotion && errors.productInPromotion && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\r\n                                    {errors.productInPromotion}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        <Box sx={{ mt: 2 }}>\r\n                            <AnimateButton>\r\n                                <Button\r\n                                    disableElevation\r\n                                    disabled={isSubmitting}\r\n                                    fullWidth\r\n                                    size=\"large\"\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                >\r\n                                    Actualizar datos\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Box>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Form;\r\n","// material-ui\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport VisibilitySwitch from '../../components/tables/VisibilitySwitch';\r\n\r\n// project imports\r\nimport repository from '../../repositories/product';\r\nimport Form from 'components/forms/SingleProduct';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst SamplePage = () => {\r\n    const token = useSelector((state) => state.auth.user.token);\r\n    const [product, setProduct] = useState(undefined);\r\n    const id = useParams().id;\r\n\r\n    useEffect(() => {\r\n        repository.getById(id).then(setProduct);\r\n    }, []);\r\n\r\n    return (\r\n        <MainCard title=\"Actualizar datos\" secondary={<VisibilitySwitch id={id} token={token} />}>\r\n            <Form data={product} />\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default SamplePage;\r\n"],"names":["BASE_URL","API_URL","config","GET_ALL_PRODUCTS","GET_BY_ID","EDIT_BY_ID","TABLE_CONFIG","position","hideProgressBar","closeButton","closeOnClick","style","boxShadow","background","color","fontWeight","fontSize","ERROR_CONFIG","scripted","useRef","useEffect","current","async","axios","data","id","constructor","published","token","toggle","headers","Authorization","console","log","e","AntSwitch","styled","Switch","theme","width","height","padding","display","transform","opacity","backgroundColor","palette","mode","borderRadius","transition","transitions","create","duration","boxSizing","CustomizedSwitches","visibility","setVisibility","useState","Stack","onChange","service","toast","alert","direction","spacing","alignItems","Typography","defaultChecked","inputProps","others","useSelector","state","auth","user","product","useTheme","scriptedRef","useScriptRef","customization","initialValues","name","code","description","desc","carpiId","size","weight","stock","max","min","productInPromotion","submit","validationSchema","Yup","shape","required","onSubmit","values","setErrors","setStatus","setSubmitting","request","success","err","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","FormControl","fullWidth","error","Boolean","sx","typography","customInput","InputLabel","htmlFor","OutlinedInput","type","value","onBlur","FormHelperText","Box","mt","AnimateButton","Button","disableElevation","disabled","variant","setProduct","undefined","useParams","repository","then","MainCard","title","secondary"],"sourceRoot":""}