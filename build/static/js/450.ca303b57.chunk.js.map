{"version":3,"file":"static/js/450.ca303b57.chunk.js","mappings":"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","sources":["axios/product.js","components/tables/VisibilitySwitch.jsx","config/Notifications.js","hooks/useScriptRef.js","repositories/product.js","services/Product.js","components/tables/ImageDialog.jsx","components/forms/SingleProduct.jsx","views/single-product-page/index.js"],"sourcesContent":["import { API_URL } from '../config/backend';\r\n\r\nconst endpoint = '/api/v1/product/';\r\n\r\n// End point base\r\nconst BASE_URL = API_URL + endpoint;\r\n\r\nexport const config = {\r\n    GET_ALL_PRODUCTS: BASE_URL + '?publish=false',\r\n    GET_BY_ID: BASE_URL,\r\n    EDIT_BY_ID: BASE_URL\r\n};\r\n","import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Switch from '@mui/material/Switch';\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\nimport service from '../../services/Product';\r\nimport { toast } from 'react-toastify';\r\nimport { ERROR_CONFIG, TABLE_CONFIG } from 'config/Notifications';\r\n\r\nconst AntSwitch = styled(Switch)(({ theme }) => ({\r\n    width: 28,\r\n    height: 16,\r\n    padding: 0,\r\n    display: 'flex',\r\n    '&:active': {\r\n        '& .MuiSwitch-thumb': {\r\n            width: 15\r\n        },\r\n        '& .MuiSwitch-switchBase.Mui-checked': {\r\n            transform: 'translateX(9px)'\r\n        }\r\n    },\r\n    '& .MuiSwitch-switchBase': {\r\n        padding: 2,\r\n        '&.Mui-checked': {\r\n            transform: 'translateX(12px)',\r\n            color: '#fff',\r\n            '& + .MuiSwitch-track': {\r\n                opacity: 1,\r\n                backgroundColor: theme.palette.mode === 'dark' ? '#177ddc' : '#1890ff'\r\n            }\r\n        }\r\n    },\r\n    '& .MuiSwitch-thumb': {\r\n        boxShadow: '0 2px 4px 0 rgb(0 35 11 / 20%)',\r\n        width: 12,\r\n        height: 12,\r\n        borderRadius: 6,\r\n        transition: theme.transitions.create(['width'], {\r\n            duration: 200\r\n        })\r\n    },\r\n    '& .MuiSwitch-track': {\r\n        borderRadius: 16 / 2,\r\n        opacity: 1,\r\n        backgroundColor: theme.palette.mode === 'dark' ? 'rgba(255,255,255,.35)' : 'rgba(0,0,0,.25)',\r\n        boxSizing: 'border-box'\r\n    }\r\n}));\r\n\r\nexport default function CustomizedSwitches({ disabledValue, activeValue, handler, defaultValue }) {\r\n    return (\r\n        <Stack onChange={handler} direction=\"row\" spacing={1} alignItems=\"center\">\r\n            <Typography>{disabledValue}</Typography>\r\n            <AntSwitch defaultChecked={defaultValue} inputProps={{ 'aria-label': 'ant design' }} />\r\n            <Typography>{activeValue}</Typography>\r\n        </Stack>\r\n    );\r\n}\r\n","export const DEFAULT_CONFIG = {\r\n    position: 'bottom-left',\r\n    hideProgressBar: true,\r\n    closeButton: false,\r\n    closeOnClick: false,\r\n    style: {\r\n        boxShadow: 'none',\r\n        background: 'black',\r\n        color: 'white',\r\n        fontSize: '0.8rem'\r\n    }\r\n};\r\n\r\nexport const TABLE_CONFIG = {\r\n    position: 'bottom-left',\r\n    hideProgressBar: true,\r\n    closeButton: false,\r\n    closeOnClick: false,\r\n    style: {\r\n        boxShadow: 'none',\r\n        background: '#198754',\r\n        color: 'white',\r\n        fontWeight: '600',\r\n        fontSize: '0.745rem'\r\n    }\r\n};\r\n\r\nexport const ERROR_CONFIG = {\r\n    position: 'bottom-left',\r\n    hideProgressBar: true,\r\n    closeButton: false,\r\n    closeOnClick: false,\r\n    style: {\r\n        boxShadow: 'none',\r\n        background: '#ef3443',\r\n        color: 'white',\r\n        fontSize: '0.8rem'\r\n    }\r\n};\r\n","import { useEffect, useRef } from 'react';\r\n\r\n// ==============================|| ELEMENT REFERENCE HOOKS  ||============================== //\r\n\r\nconst useScriptRef = () => {\r\n    const scripted = useRef(true);\r\n\r\n    useEffect(\r\n        () => () => {\r\n            scripted.current = false;\r\n        },\r\n        []\r\n    );\r\n\r\n    return scripted;\r\n};\r\n\r\nexport default useScriptRef;\r\n","import axios from 'axios';\r\nimport { config } from '../axios/product';\r\n\r\nclass Repository {\r\n    async getAll() {\r\n        const response = await axios.get(config.GET_ALL_PRODUCTS);\r\n        return response.data;\r\n    }\r\n\r\n    async getById(id) {\r\n        const response = await axios.get(`${config.GET_BY_ID}/${id}`);\r\n        return response.data;\r\n    }\r\n}\r\n\r\nexport default new Repository();\r\n","import axios from 'axios';\r\nimport { TABLE_CONFIG } from 'config/Notifications';\r\nimport { toast } from 'react-toastify';\r\nimport { config } from '../axios/product';\r\n\r\nclass ProductService {\r\n    constructor() {}\r\n\r\n    // Change product visibility\r\n    async toggleVisibility(id, published, token) {\r\n        try {\r\n            const toggle = await axios.patch(\r\n                config.EDIT_BY_ID + id,\r\n                { published },\r\n                {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`\r\n                    }\r\n                }\r\n            );\r\n            toggle && toast('Se ha cambiado con exito', TABLE_CONFIG);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    // Edit product by id\r\n    async editById(id, data, token) {\r\n        try {\r\n            const edit = await axios.patch(config.EDIT_BY_ID + id, data, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            });\r\n\r\n            edit && toast('Se ha modificado con exito, refresca la pagina', TABLE_CONFIG);\r\n\r\n            return edit;\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    // Create product\r\n    async create() {\r\n        try {\r\n            return axios.patch();\r\n        } catch (e) {}\r\n    }\r\n}\r\n\r\nexport default new ProductService();\r\n","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nexport default function MaxWidthDialog() {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Button variant=\"outlined\" onClick={handleClickOpen}>\r\n                Cargar imagen\r\n            </Button>\r\n            <Dialog fullWidth={true} maxWidth={'sm'} open={open} onClose={handleClose}>\r\n                <DialogTitle>Imagen del producto</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>Aqui podras cambiar las imagenes del producto</DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import { useSelector } from 'react-redux';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box, Button, FormControl, FormHelperText, Grid, InputLabel, OutlinedInput, Typography, useMediaQuery } from '@mui/material';\r\n\r\n// third party\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\n\r\n// project imports\r\nimport useScriptRef from 'hooks/useScriptRef';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport ImageDialog from '../tables/ImageDialog';\r\n\r\n// assets\r\nimport service from '../../services/Product';\r\n\r\n// ===========================|| FIREBASE - REGISTER ||=========================== //\r\n\r\nconst Form = ({ ...others }) => {\r\n    const token = useSelector((state) => state.auth.user.token);\r\n    const product = others.data;\r\n    const theme = useTheme();\r\n    const scriptedRef = useScriptRef();\r\n    const customization = useSelector((state) => state.customization);\r\n\r\n    console.log(product);\r\n\r\n    if (!product) return <p>Esperando...</p>;\r\n    return (\r\n        <>\r\n            <div className=\"flex-between\">\r\n                <h2>Datos del producto</h2>\r\n                <ImageDialog />\r\n            </div>\r\n\r\n            <Formik\r\n                initialValues={{\r\n                    name: product.name,\r\n                    description: product.description,\r\n                    size: product.size,\r\n                    weight: product.weight,\r\n                    color: product.color,\r\n                    max: product.max,\r\n                    min: product.min,\r\n                    productInPromotion: product.productInPromotion,\r\n                    submit: null\r\n                }}\r\n                onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n                    try {\r\n                        const { submit, ...data } = values;\r\n                        const request = await service.editById(product.id, data, token);\r\n                        if (scriptedRef.current) {\r\n                            setStatus({ success: true });\r\n                            setSubmitting(false);\r\n                        }\r\n                    } catch (err) {\r\n                        if (scriptedRef.current) {\r\n                            setStatus({ success: false });\r\n                            setErrors({ submit: err.message });\r\n                            setSubmitting(false);\r\n                        }\r\n                    }\r\n                }}\r\n            >\r\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                    <form noValidate onSubmit={handleSubmit} {...others}>\r\n                        {/* Product name */}\r\n                        <FormControl fullWidth error={Boolean(touched.name && errors.name)} sx={{ ...theme.typography.customInput }}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-product-name\">Nombre completo</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-product-name\"\r\n                                type=\"text\"\r\n                                value={values.name}\r\n                                name=\"name\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.name && errors.name && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\r\n                                    {errors.name}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        {/* Product Description */}\r\n                        <FormControl\r\n                            fullWidth\r\n                            error={Boolean(touched.description && errors.description)}\r\n                            sx={{ ...theme.typography.customInput }}\r\n                        >\r\n                            <InputLabel htmlFor=\"outlined-adornment-product-size\">Descripcion del producto</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-product-size\"\r\n                                type=\"text\"\r\n                                value={values.description}\r\n                                name=\"description\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.description && errors.description && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\r\n                                    {errors.description}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        {/* Product size */}\r\n                        <FormControl fullWidth error={Boolean(touched.size && errors.size)} sx={{ ...theme.typography.customInput }}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-product-size\">Tamaño del producto</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-product-size\"\r\n                                type=\"text\"\r\n                                value={values.size}\r\n                                name=\"size\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.size && errors.size && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\r\n                                    {errors.name}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        {/* Product weight */}\r\n                        <FormControl fullWidth error={Boolean(touched.weight && errors.weight)} sx={{ ...theme.typography.customInput }}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-product-size\">Peso del producto</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-product-size\"\r\n                                type=\"text\"\r\n                                value={values.weight}\r\n                                name=\"weight\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.weight && errors.weight && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\r\n                                    {errors.weight}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        {/* Product color */}\r\n                        <FormControl fullWidth error={Boolean(touched.color && errors.color)} sx={{ ...theme.typography.customInput }}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-product-stock\">Color del producto</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-product-stock\"\r\n                                type=\"number\"\r\n                                value={values.color}\r\n                                name=\"color\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.color && errors.color && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\r\n                                    {errors.color}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        {/* Product Max */}\r\n                        <FormControl fullWidth error={Boolean(touched.max && errors.max)} sx={{ ...theme.typography.customInput }}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-product-stock\">Max</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-product-stock\"\r\n                                type=\"number\"\r\n                                value={values.max}\r\n                                name=\"max\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.max && errors.max && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\r\n                                    {errors.max}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        {/* Product Min */}\r\n                        <FormControl fullWidth error={Boolean(touched.max && errors.max)} sx={{ ...theme.typography.customInput }}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-product-stock\">Min</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-product-stock\"\r\n                                type=\"number\"\r\n                                value={values.min}\r\n                                name=\"min\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.min && errors.min && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\r\n                                    {errors.min}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        {/* Product in promotion */}\r\n                        <FormControl\r\n                            fullWidth\r\n                            error={Boolean(touched.productInPromotion && errors.productInPromotion)}\r\n                            sx={{ ...theme.typography.customInput }}\r\n                        >\r\n                            <InputLabel htmlFor=\"outlined-adornment-product-stock\">En promocion</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-product-stock\"\r\n                                type=\"boolean\"\r\n                                value={values.productInPromotion}\r\n                                name=\"productInPromotion\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.productInPromotion && errors.productInPromotion && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\r\n                                    {errors.productInPromotion}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        <Box sx={{ mt: 2 }}>\r\n                            <AnimateButton>\r\n                                <Button\r\n                                    disableElevation\r\n                                    disabled={isSubmitting}\r\n                                    fullWidth\r\n                                    size=\"large\"\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                >\r\n                                    Actualizar datos\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Box>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Form;\r\n","// material-ui\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport VisibilitySwitch from '../../components/tables/VisibilitySwitch';\r\n\r\n// project imports\r\nimport repository from '../../repositories/product';\r\nimport service from '../../services/Product';\r\nimport Form from 'components/forms/SingleProduct';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst SamplePage = () => {\r\n    const token = useSelector((state) => state.auth.user.token);\r\n    const [product, setProduct] = useState(undefined);\r\n    const id = useParams().id;\r\n\r\n    useEffect(() => {\r\n        repository.getById(id).then(setProduct);\r\n    }, []);\r\n\r\n    const toggleStateHandler = () => service.toggleVisibility(id, !product.published, token);\r\n\r\n    return (\r\n        <MainCard\r\n            title=\"Actualizar datos\"\r\n            secondary={\r\n                product && (\r\n                    <VisibilitySwitch\r\n                        activeValue=\"Visible en la tienda\"\r\n                        disabledValue=\"Escondido\"\r\n                        handler={toggleStateHandler}\r\n                        defaultValue={product.published}\r\n                        token={token}\r\n                    />\r\n                )\r\n            }\r\n        >\r\n            <Form data={product} />\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default SamplePage;\r\n"],"names":["BASE_URL","API_URL","config","GET_ALL_PRODUCTS","GET_BY_ID","EDIT_BY_ID","AntSwitch","styled","Switch","theme","width","height","padding","display","transform","color","opacity","backgroundColor","palette","mode","boxShadow","borderRadius","transition","transitions","create","duration","boxSizing","CustomizedSwitches","disabledValue","activeValue","handler","defaultValue","onChange","direction","spacing","alignItems","defaultChecked","inputProps","TABLE_CONFIG","position","hideProgressBar","closeButton","closeOnClick","style","background","fontWeight","fontSize","ERROR_CONFIG","scripted","useRef","useEffect","current","async","axios","data","id","constructor","published","token","headers","Authorization","toast","e","console","log","edit","MaxWidthDialog","open","setOpen","React","handleClose","Button","variant","onClick","Dialog","fullWidth","maxWidth","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","others","useSelector","state","auth","user","product","useTheme","scriptedRef","useScriptRef","customization","className","initialValues","name","description","size","weight","max","min","productInPromotion","submit","onSubmit","values","setErrors","setStatus","setSubmitting","service","success","err","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","FormControl","error","Boolean","sx","typography","customInput","InputLabel","htmlFor","OutlinedInput","type","value","onBlur","FormHelperText","Box","mt","AnimateButton","disableElevation","disabled","setProduct","useState","undefined","useParams","repository","then","MainCard","title","secondary","VisibilitySwitch"],"sourceRoot":""}